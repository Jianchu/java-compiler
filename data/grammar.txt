#all these work so that I could write comments...
#issue: somehow represent empty string, using EPSILON for now

S BOF Literal EOF
Literal DECIMAL
Literal BooleanLiteral
BooleanLiteral TRUE
BooleanLiteral FALSE
Literal CHARACTER
Literal STRING
Literal NULL

#productions for type
Type PrimitiveType
Type ReferenceType
PrimitiveType BOOLEAN
PrimitiveType IntegralType
IntegralType INT
IntegralType BYTE
IntegralType CHAR
IntegralType SHORT
ReferenceType ClassOrInterfaceType
ReferenceType ArrayType
ClassOrInterfaceType ClassType
ClassOrInterfaceType InterfaceType
ClassType Name
InterfaceType Name
ArrayType ReferenceType LBRACKET RBRACKET
ArrayType ID LBRACKET RBRACKET
ArrayType ArrayType LBRACKET RBRACKET

#productions for names
Name SimpleName
Name QualifiedName
SimpleName ID
QualifiedName Name DOT ID

#productions for packages
CompilationUnit PackageDeclaration
CompilationUnit ImportDeclarations
CompilationUnit TypeDeclarations
CompilationUnit EPSILON
PackageDeclaration PACKAGE Name SEMICOLON
ImportDeclarations ImportDeclaration
ImportDeclarations ImportDeclarations ImportDeclaration
ImportDeclaration SingleTypeImportDeclaration
ImportDeclaration TypeImportOnDemandDeclaration
SingleTypeImportDeclaration IMPORT Name
TypeImportOnDemandDeclaration Name DOT STAR SEMICOLON
TypeDeclarations TypeDeclaration
TypeDeclarations TypeDeclarations TypeDeclaration
TypeDeclaration ClassDeclaration
TypeDeclaration InterfaceDeclaration
TypeDeclaration SEMICOLON

#productions for modifiers: 
#no private, synchronized, transient, volatile in joos 1W
Modifiers Modifier
Modifiers Modifiers Modifier
Modifier PUBLIC
Modifier PROTECTED
Modifier STATIC
Modifier ABSTRACT
Modifier FINAL
Modifier NATIVE

#production for class declarations
# no Static Initializer
ClassDeclaration Modifiers CLASS ID Super Interfaces ClassBody
ClassDeclaration CLASS ID Super Interfaces ClassBody
ClassDeclaration Modifiers CLASS ID Interfaces ClassBody
ClassDeclaration Modifiers CLASS ID Super ClassBody
ClassDeclaration CLASS ID Interfaces ClassBody
ClassDeclaration CLASS ID Super ClassBody
ClassDeclaration Modifiers CLASS ID ClassBody
ClassDeclaration CLASS ID ClassBody
Super EXTENDS ClassType
Interfaces IMPLEMENTS InterfaceTypeList
InterfaceTypeList InterfaceType
InterfaceTypeList InterfaceTypeList COMMA InterfaceType
ClassBody LBRACE ClassBodyDeclarations RBRACE
ClassBody LBRACE RBRACE
ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclarations ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclaration ClassMemberDeclaration
ClassBodyDeclaration ConstructorDeclaration
ClassMemberDeclaration FieldDeclaration
ClassMemberDeclaration MethodDeclaration

#production for field declarations
#no multiple variables per declaration
FieldDeclaration Modifiers Type VariableDeclarators SEMICOLON
FieldDeclaration Type VariableDeclarator SEMICOLON
VariableDeclarator VariableDeclaratorId
VariableDeclaratorId VariableDeclaratorId ASSIGN VariableInitializer
VariableDeclaratorId ID
VariableDeclaratorId VariableDeclaratorId LBRACKET RBRACKET
VariableInitializer Expression
VariableInitializer ArrayInitializer

#production for method declarations
#no throw
MethodDeclaration MethodHeader MethodBody
MethodHeader Modifiers Type MethodDeclarator
MethodHeader Modifiers VOID MethodDeclarator
MethodHeader Type MethodDeclarator
MethodHeader VOID MethodDeclarator
MethodDeclarator ID LPAREN FormalParameterList RPAREN
MethodDeclarator ID LPAREN RPAREN
FormalParameterList FormalParameter
FormalParameterList FormalParameterList COMMA FormalParameter
FormalParameter Type VariableDeclaratorId
MethodBody Block
MethodBody SEMICOLON

#production for constructor declarations 
#no super no this
ConstructorDeclaration Modifiers ConstructorDeclarator ConstructorBody
ConstructorDeclaration ConstructorDeclarator
ConstructorDeclarator SimpleName LPAREN FormalParameterList RPAREN
ConstructorDeclarator SimpleName LPAREN RPAREN
ConstructorBody LBRACE BlockStatements RBRACE
ConstructorBody LBRACE RBRACE

#production for interface
#interface extends? abstract method?
#no inferface constants
InterfaceDeclaration Modifiers INTERFACE ID ExtendsInterfaces InterfaceBody
InterfaceDeclaration INTERFACE ID ExtendsInterfaces InterfaceBody
InterfaceDeclaration Modifiers INTERFACE ID InterfaceBody
InterfaceDeclaration INTERFACE ID InterfaceBody
ExtendsInterfaces EXTENDS InterfaceType
ExtendsInterfaces ExtendsInterfaces COMMA InterfaceType
InterfaceBody LBRACE RBRACE
InterfaceBody LBRACE InterfaceMemberDeclarations RBRACE 
InterfaceMemberDeclarations InterfaceMemberDeclaration
InterfaceMemberDeclarations InterfaceMemberDeclarations AbstractMethodDeclaration
AbstractMethodDeclaration MethodHeader SEMICOLON

#production for arrays?
ArrayInitializer LBRACE VariableInitializers COMMA RBRACE
VariableInitializers VariableInitializer
VariableInitializers VariableInitializers COMMA VariableInitializer

#production for block and statement
#assignment?
Block LBRACE BlockStatements RBRACE
Block LBRACE RBRACE
BlockStatements BlockStatement
BlockStatements BlockStatements BlockStatement
BlockStatement LocalVariableDeclarationStatement Statement
LocalVariableDeclarationStatement LocalVariableDeclaration
LocalVariableDeclaration Type VariableDeclarators
Statement StatementWithoutTrailingSubstatement
Statement IfThenStatement
Statement IfThenElseStatement
Statement WhileStatement 
Statement ForStatement
StatementNoShortIf StatementWithoutTrailingSubstatement
StatementNoShortIf IfThenElseStatementNoShortIf
StatementNoShortIf WhileStatementNoShortIf
StatementNoShortIf ForStatementNoShortIf
StatementWithoutTrailingSubstatement Block
StatementWithoutTrailingSubstatement EmptyStatement
StatementWithoutTrailingSubstatement ExpressionStatement
StatementWithoutTrailingSubstatement ReturnStatement
EmptyStatement SEMICOLON
ExpressionStatement StatementExpression SEMICOLON
StatementExpression Assignment
StatementExpression MethodInvocation
StatementExpression ClassInstanceCreationExpression
IfThenStatement IF LPAREN Expression RPAREN Statement
IfThenElseStatement IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
IfThenElseStatementNoShortIf IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
WhileStatement WHILE LPAREN Expression RPAREN
WhileStatementNoShortIf WHILE LPAREN Expression RPAREN
ForStatement FOR LPAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate RPAREN Statement
ForStatement FOR LPAREN SEMICOLON Expression SEMICOLON ForUpdate RPAREN Statement
ForStatement FOR LPAREN ForInit SEMICOLON SEMICOLON ForUpdate RPAREN Statement
ForStatement FOR LPAREN ForInit SEMICOLON Expression SEMICOLON RPAREN Statement
ForStatement FOR LPAREN SEMICOLON SEMICOLON ForUpdate RPAREN Statement
ForStatement FOR LPAREN ForInit SEMICOLON SEMICOLON RPAREN Statement
ForStatement FOR LPAREN SEMICOLON Expression SEMICOLON RPAREN Statement
ForStatement FOR LPAREN SEMICOLON SEMICOLON RPAREN Statement
ForStatementNoShortIf FOR LPAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate RPAREN StatementNoShortIf
ForStatementNoShortIf FOR LPAREN SEMICOLON Expression SEMICOLON ForUpdate RPAREN StatementNoShortIf 
ForStatementNoShortIf FOR LPAREN ForInit SEMICOLON SEMICOLON ForUpdate RPAREN StatementNoShortIf 
ForStatementNoShortIf FOR LPAREN ForInit SEMICOLON Expression SEMICOLON RPAREN StatementNoShortIf 
ForStatementNoShortIf FOR LPAREN SEMICOLON SEMICOLON ForUpdate RPAREN StatementNoShortIf
ForStatementNoShortIf FOR LPAREN ForInit SEMICOLON SEMICOLON RPAREN StatementNoShortIf 
ForStatementNoShortIf FOR LPAREN SEMICOLON Expression SEMICOLON RPAREN StatementNoShortIf 
ForStatementNoShortIf FOR LPAREN SEMICOLON SEMICOLON RPAREN StatementNoShortIf
ForInit StatementExpressionList
ForInit LocalVariableDeclaration
ForUpdate StatementExpressionList
StatementExpressionList StatementExpression
StatementExpressionList StatementExpressionList COMMA StatementExpression
ReturnStatement RETURN Expression SEMICOLON
ReturnStatement RETURN SEMICOLON

#production for block and expression
#new class?
#access array?
# +/- UnaryExpression?
Primary PrimaryNoNewArray
Primary ArrayCreationExpression
PrimaryNoNewArray Literal
PrimaryNoNewArray this
PrimaryNoNewArray LPAREN Expression RPAREN
PrimaryNoNewArray ClassInstanceCreationExpression
PrimaryNoNewArray FieldAccess
PrimaryNoNewArray MethodInvocation
PrimaryNoNewArray ArrayAccess
ClassInstanceCreationExpression NEW ClassType LPAREN ArgumentList RPAREN
ClassInstanceCreationExpression NEW ClassType LPAREN RPAREN
ArgumentList Expression
ArgumentList ArgumentList COMMA Expression
ArrayCreationExpression NEW PrimitiveType DimExpr Dims
ArrayCreationExpression NEW PrimitiveType DimExpr
ArrayCreationExpression NEW ClassOrInterfaceType DimExpr Dims
ArrayCreationExpression NEW ClassOrInterfaceType DimExpr
DimExpr LBRACKET Expression RBRACKET
Dims LBRACKET RBRACKET
Dims Dims LBRACKET RBRACKET
FieldAccess Primary DOT ID
MethodInvocation Name LPAREN ArgumentList RPAREN
MethodInvocation Name LPAREN RPAREN
MethodInvocation Primary DOT ID LPAREN ArgumentList RPAREN
MethodInvocation Primary DOT ID LPAREN RPAREN
ArrayAccess Name LBRACKET Expression RBRACKET
PrimaryNoNewArray LBRACKET Expression RBRACKET
PostfixExpression Primary
PostfixExpression Name
UnaryExpression UnaryExpressionNotPlusMinus
UnaryExpressionNotPlusMinus PostfixExpression
UnaryExpressionNotPlusMinus BIT_COMP UnaryExpression
UnaryExpressionNotPlusMinus NOT UnaryExpression
UnaryExpressionNotPlusMinus CastExpression
CastExpression LPAREN PrimitiveType Dims RPAREN UnaryExpression
CastExpression LPAREN PrimitiveType RPAREN UnaryExpression
CastExpression LPAREN Expression RPAREN UnaryExpressionNotPlusMinus
CastExpression LPAREN Name Dims RPAREN UnaryExpressionNotPlusMinus
MultiplicativeExpression UnaryExpression
MultiplicativeExpression MultiplicativeExpression STAR UnaryExpression
MultiplicativeExpression MultiplicativeExpression SLASH UnaryExpression
MultiplicativeExpression MultiplicativeExpression MOD UnaryExpression
AdditiveExpression MultiplicativeExpression
AdditiveExpression PLUS MultiplicativeExpression
AdditiveExpression MINUS MultiplicativeExpression
ShiftExpression AdditiveExpression
RelationalExpression ShiftExpression
RelationalExpression RelationalExpression LANGLE ShiftExpression
RelationalExpression RelationalExpression RANGLE ShiftExpression
RelationalExpression RelationalExpression GEQ ShiftExpression
RelationalExpression RelationalExpression LEQ ShiftExpression
RelationalExpression RelationalExpression INSTANCEOF ReferenceType
EqualityExpression RelationalExpression
EqualityExpression EqualityExpression EQUAL RelationalExpression
EqualityExpression EqualityExpression NEQ RelationalExpression
AndExpression EqualityExpression
ExclusiveOrExpression AndExpression
InclusiveOrExpression ExclusiveOrExpression
ConditionalAndExpression InclusiveOrExpression
ConditionalAndExpression ConditionalAndExpression AND InclusiveOrExpression
ConditionalOrExpression ConditionalAndExpression
ConditionalOrExpression ConditionalOrExpression LOR ConditionalAndExpression
ConditionalExpression ConditionalOrExpression
AssignmentExpression ConditionalExpression
AssignmentExpression Assignment
Assignment LeftHandSide AssignmentOperator AssignmentExpression
LeftHandSide Name
LeftHandSide FieldAccess
LeftHandSide ArrayAccess
AssignmentOperator ASSIGN
Expression AssignmentExpression
ConstantExpression Expression